#PROTECTED REGION ID(LiberaBrilliancePlus::Makefile) ENABLED START#
#=============================================================================
#
# file :        Makefile
#
# description : Makefile to generate a TANGO device server.
#
# project :     LiberaBrilliancePlus
#
# $Author:  $
#
# $Revision:  $
# $Date:  $
#
#=============================================================================
#                This file is generated by POGO
#        (Program Obviously used to Generate tango Object)
#=============================================================================
#
#
#=============================================================================
# MAKE_ENV is the path to find common environment to buil project
#
MAKE_ENV = $(TANGO_HOME)/share/pogo/preferences

#=============================================================================
# PACKAGE_NAME is the name of the library/device/exe you want to build
#
PACKAGE_NAME = liberacommon
MAJOR_VERS   = 3
MINOR_VERS   = 2
RELEASE      = Release_$(MAJOR_VERS)_$(MINOR_VERS)
LIBERA_VERSION = $(LIBERA_API)

# #=============================================================================
# # RELEASE_TYPE
# # - DEBUG     : debug symbols - no optimization
# # - OPTIMIZED : no debug symbols - optimization level set to O2
# #-----------------------------------------------------------------------------
RELEASE_TYPE = DEBUG

#=============================================================================
# OUTPUT_TYPE can be one of the following :
#   - 'STATIC_LIB' for a static library (.a)
#   - 'SHARED_LIB' for a dynamic library (.so)
#   - 'DEVICE' for a device server (will automatically include and link
#            with Tango dependencies)
#   - 'SIMPLE_EXE' for an executable with no dependency (for exemple the test tool
#                of a library with no Tango dependencies)
#
OUTPUT_TYPE = SHARED_LIB

#=============================================================================
# OUTPUT_DIR  is the directory which contains the build result.
# if not set, the standard location is :
#	- $HOME/DeviceServers if OUTPUT_TYPE is DEVICE
#	- ../bin for others
#
OUTPUT_DIR = ./bin/$(BIN_DIR)


#=============================================================================
# INC_DIR_USER is the list of all include path needed by your sources
#   - for a device server, tango dependencies are automatically appended
#   - '-I ../include' and '-I .' are automatically appended in all cases
#
#
INC_DIR_USER= -I . -I /usr/include/libera-$(LIBERA_VERSION)

#=============================================================================
# LIB_DIR_USER is the list of user library directories
#   - for a device server, tango libraries directories are automatically appended
#   - '-L ../lib' is automatically appended in all cases
#
LIB_DIR_USER= -L /opt/libera/lib

#=============================================================================
# LFLAGS_USR is the list of user link flags
#   - for a device server, tango libraries directories are automatically appended
#   - '-ldl -lpthread' is automatically appended in all cases
#
# !!! ATTENTION !!!
# Be aware that the order matters.
# For example if you must link with libA, and if libA depends itself on libB
# you must use '-lA -lB' in this order as link flags, otherwise you will get
# 'undefined reference' errors
#
#LFLAGS_USR+=
LFLAGS_USR+= -lliberamci$(LIBERA_VERSION) -lliberainet$(LIBERA_VERSION) -lliberaistd$(LIBERA_VERSION)
ifeq ($(LIBERA_VERSION),2.9)
	LFLAGS_USR+= -lliberamci$(LIBERA_VERSION) -lliberainet$(LIBERA_VERSION) -lliberaistd$(LIBERA_VERSION)
else
	LFLAGS_USR+= -lliberacommon -lliberamci$(LIBERA_VERSION) -lliberainet$(LIBERA_VERSION) -lliberaistd$(LIBERA_VERSION) -lliberaisig$(LIBERA_VERSION)
endif
#=============================================================================
# CXXFLAGS_USR lists the compilation flags specific for your library/device/exe
# This is the place where to put your compile-time macros using '-Dmy_macro'
#
# -DACE_HAS_EXCEPTIONS -D__ACE_INLINE__ for ACE
#
CXXFLAGS_USR+= -Wall -std=c++0x -D_GLIBCXX_USE_NANOSLEEP


#=============================================================================
# TANGO_REQUIRED
# - TRUE  : your project depends on TANGO
# - FALSE : your project does not depend on TANGO
#-----------------------------------------------------------------------------
# - NOTE : if PROJECT_TYPE is set to DEVICE, TANGO will be auto. added
#-----------------------------------------------------------------------------
TANGO_REQUIRED = TRUE
#=============================================================================
#	include Standard TANGO compilation options
#
include $(MAKE_ENV)/tango.opt

#=============================================================================
#	POST_PROCESSING: action to be done after normal make.
#	e.g.:  change executable file name, .....
#POST_PROCESSING = \
#	mv bin/$(BIN_DIR)/$(PACKAGE_NAME) bin/$(BIN_DIR)/$(PACKAGE_NAME)_DS

#=============================================================================
# SVC_OBJS is the list of all objects needed to make the output
#
#SVC_INCL =  $(PACKAGE_NAME).h $(PACKAGE_NAME)Class.h

SVC_INCL = LiberaClient.h \
		   LiberaAttr.h \
		   LiberaLogsAttr.h \
		   LiberaSignal.h \
		   LiberaSignalAttr.h \
		   LiberaScalarAttr.h

SVC_OBJS =  $(LIB_OBJS)

LIB_OBJS =  $(OBJDIR)/LiberaClient.o \
            $(OBJDIR)/LiberaAttr.o \
            $(OBJDIR)/LiberaLogsAttr.o \
            $(OBJDIR)/LiberaSignal.o

#=============================================================================
#	include common targets
#
include $(MAKE_ENV)/common_target.opt

#LDFLAGS +=      -shared -O -Wl,-soname,lib$(PROJECT_NAME).so.2.1
#=============================================================================


#PROTECTED REGION END#

#------------------------------------------------------------------------------
#-- install:
#------------------------------------------------------------------------------
INSTALL_DIR=$(DESTDIR)/opt/libera/lib

install:
	@echo "Installing $(OUTPUT_DIR)/lib$(PROJECT_NAME).so  to  $(INSTALL_DIR) , $(PWD)"
ifeq ($(PROJECT_TYPE),SHARED_LIB)
	mkdir -p $(INSTALL_DIR)
	#TODO (leave completely the control to the debian package) next line used only during a "make install" command
	mv $(OUTPUT_DIR)/lib$(PROJECT_NAME).so $(INSTALL_DIR)/lib$(PROJECT_NAME).so.$(MAJOR_VERS).$(MINOR_VERS)
	#TODO Create debian files from debmake https://www.debian.org/doc/manuals/debmake-doc/ch04.en.html
endif
